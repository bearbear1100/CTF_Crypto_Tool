
# This file was *autogenerated* from the file partial_q.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_4 = Integer(4); _sage_const_65537 = Integer(65537); _sage_const_0p3 = RealNumber('0.3'); _sage_const_0p5 = RealNumber('0.5'); _sage_const_2062521684938364459387498432429946594318125528980549199356976621583932152727232193909641817297183895615845700210175832265356957753985436563959942957952186855195131118549518451899418177389429804334409624918942126922696191728934268038066970010450960060605601284346526760357177120663929662244482217738116522078301 = Integer(2062521684938364459387498432429946594318125528980549199356976621583932152727232193909641817297183895615845700210175832265356957753985436563959942957952186855195131118549518451899418177389429804334409624918942126922696191728934268038066970010450960060605601284346526760357177120663929662244482217738116522078301)
n = _sage_const_2062521684938364459387498432429946594318125528980549199356976621583932152727232193909641817297183895615845700210175832265356957753985436563959942957952186855195131118549518451899418177389429804334409624918942126922696191728934268038066970010450960060605601284346526760357177120663929662244482217738116522078301 
e = _sage_const_65537 

p = isqrt(_sage_const_4 *n)

beta = _sage_const_0p5 
epsilon = beta**_sage_const_2 /_sage_const_7 

pbits = p.nbits()
kbits = floor(n.nbits()*(beta**_sage_const_2 -epsilon))
pbar = p & (_sage_const_2 **pbits-_sage_const_2 **kbits)
print "upper %d bits (of %d bits) is given" % (pbits-kbits, pbits)

PR = PolynomialRing(Zmod(n), names=('x',)); (x,) = PR._first_ngens(1)
f = x + pbar

# print p
x0 = f.small_roots(X=_sage_const_2 **kbits, beta=_sage_const_0p3 )[_sage_const_0 ]  # find root < 2^kbits with factor >= n^0.3
print (x0)
print (pbar)
print (x0 + pbar)
print is_prime(x0 + pbar)

